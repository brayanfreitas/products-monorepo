version: '3.8'

services:
  product-a:
    build:
      context: .
      dockerfile: ./apps/product-a/Dockerfile
      target: development
    command: npm run start:dev product-a
    env_file:
      - ./apps/product-a/.env
    volumes:
      - .:/usr/src/app
      - /user/src/app/node_modules
    ports:
      - '3000:3000'

  product-b:
    build:
      context: .
      dockerfile: ./apps/product-b/Dockerfile
      target: development
    command: npm run start:dev product-b
    env_file:
      - ./apps/product-b/.env
    volumes:
      - .:/usr/src/app
      - /user/src/app/node_modules
  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'

  mongo1:
    container_name: mongo-replica-set
    image: candis/mongo-replica-set
    volumes:
      - ~/mongors/data1:/data/db
    networks:
      - mongors-network
    ports:
      - 27017:27017
      - 27018:27017
      - 27019:27017

  mongo2:
    image: mongo:4.4
    ports:
      - "27020:27017"
    networks:
      - mongors-network
    environment:
      MONGO_INITDB_DATABASE: mydb2
    volumes:
      - ~/mongors/data2:/data/db
networks:
  mongors-network:
    driver: bridge
